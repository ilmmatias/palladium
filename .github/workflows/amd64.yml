name: amd64 (Release)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Install basic packages
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake lld ninja-build mkisofs mtools

    - name: Install LLVM
      run: |
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        sudo add-apt-repository -y "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-21 main"
        sudo apt-get install -y clang-21 lld-21 llvm-21 libclang-21-dev

    - name: Checkout llvm-project
      uses: actions/checkout@v3
      with:
        repository: llvm/llvm-project
        ref: llvmorg-21.1.0
        path: llvm-project

    - name: Checkout palladium
      uses: actions/checkout@v3
      with:
        path: palladium

    - name: Configure, build, and install compiler-rt for Target
      run: |
        PALLADIUM_PATH=${{github.workspace}}/palladium \
        COMPILER_RT_PATH=${{github.workspace}}/llvm-project/compiler-rt \
        COMPILER_RT_TARGET=x86_64 \
        LLVM_SUFFIX=-21 \
        palladium/build-compiler-rt.sh

    - name: Configure Target
      run: |
        cmake \
          -S palladium/src \
          -B build.target \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DARCH=amd64 \
          -DLLVM_SUFFIX=-21

    - name: Build Target
      run: cmake --build build.target --config ${{env.BUILD_TYPE}}

    - name: Build EFI image
      run: |
        dd if=/dev/zero of=build.target/fat.img bs=1k count=184320
        mformat -F -i build.target/fat.img
        mmd -i build.target/fat.img ::/EFI
        mmd -i build.target/fat.img ::/EFI/BOOT
        mmd -i build.target/fat.img ::/EFI/PALLADIUM
        mcopy -i build.target/fat.img build.target/boot/osloader/osloader.exe ::/EFI/BOOT/BOOTX64.EFI
        mcopy -i build.target/fat.img build.target/kernel/kernel.exe ::/EFI/PALLADIUM/KERNEL.EXE
        mcopy -i build.target/fat.img build.target/drivers/acpi/acpi.sys ::/EFI/PALLADIUM/ACPI.SYS
        echo "Kernel=KERNEL.EXE" > build.target/boot.cfg
        echo "BootDriver=ACPI.SYS" >> build.target/boot.cfg
        mcopy -i build.target/fat.img build.target/boot.cfg ::/EFI/PALLADIUM/BOOT.CFG

    - name: Build ISO image
      run: |
        mkdir -p _root
        cp build.target/fat.img _root/fat.img
        mkisofs -R -f -eltorito-boot fat.img -no-emul-boot -o build.target/iso9660.iso _root

    - uses: actions/upload-artifact@v4
      with:
        name: fat.img
        path: build.target/fat.img

    - uses: actions/upload-artifact@v4
      with:
        name: iso9660.iso
        path: build.target/iso9660.iso
